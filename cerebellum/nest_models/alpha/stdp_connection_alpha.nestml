synapse stdp_connection_alpha:

    state:
        w real = 0.07
        w_change real = 0.
        local_t ms = 0 ms
        x real = 1.

    parameters:
        w_min real = 0.
        w_max real = 0.2
        d ms = 5 ms @nest::delay #dendritic delay
        A_minus real = -0.0002 #amplitude of weight change for depression
        A_plus real = 0.012 #amplitude of weight change for facilitation
        tau ms = 50 ms #time constant for kernel normalization
        t0 ms = 100 ms #time for step activation
        local_resolution ms = .1 ms #local resolution
	
    equations:
        kernel K = (local_t/tau) * exp(1-(local_t/tau)) #kernel equation
        
        inline w_conv real = convolve(K, pre_spikes)
	
    #no internal equations needed -> no internals:
	
    input:
        pre_spikes <- spike
        post_spikes <- spike
        mod_spikes <- spike
        
    output:
        spike
    
    onReceive(mod_spikes):
        #facilitation
        if local_t < t0:
            w_change = 0
        else:
            w_change += A_plus * w_conv
    
    onReceive(post_spikes):
        #depression
        w_change += A_minus
    
    onReceive(pre_spikes):
        deliver_spike(w,d)
    
    update:
        # forward Euler integration
        while local_t < resolution():
            local_t += local_resolution
            inline dxdt real = -1/(x * x)
            x += local_resolution * (1/dxdt)

        w = w + w_change
        
        if w >= w_max:
            w = w_max
            
        if w <= w_min:
            w = w_min