synapse stdp_connection_sinexp:
	
    state:
	    w real = 0.14
	    w_change real = 0.
	    x real = 1
	    local_t ms = 0 ms
	
    parameters:
        w_min real = 0.
        w_max real = 0.6
        d ms = 5 ms  @nest::delay #dendritic delay
        A_minus real = -0.005 #amplitude of weight change for depression
        A_plus real = 0.00005 #amplitude of weight change for facilitation
        C real = 1.2848 #coefficient for kernel normalization
        tau ms = 1000 ms #time constant for kernel normalization
        t0 ms = 100 ms #kernel integration peak time
        pi real = 3.141592653 #pi
        local_resolution ms = .1 ms #local resolution
	
    equations:
        inline frazione_temp real = local_t/tau

        inline frazione_const real = t0/tau
        
        kernel K = (1. / C) * exp((-local_t-t0)/tau) * pow(sin(frazione_temp - frazione_const), 20) #kernel equation
        
        inline w_conv real = convolve(K, pre_spikes)
	
    #no internal equations needed -> no internals:
	
    input:
        pre_spikes <- spike
        post_spikes <- spike
        mod_spikes <- spike
        
    output:
        spike
    
    onReceive(mod_spikes):
        #depression
        w_change += A_minus * w_conv
    
    onReceive(post_spikes):
        #facilitation
        w_change += A_plus
    
    onReceive(pre_spikes):
        deliver_spike(w,d)
    
    update:
        # forward Euler integration
        while local_t < resolution():
            local_t += local_resolution
            inline dxdt real = -1/(x * x)
            x += local_resolution * (1/dxdt)
        
        w = w + w_change
        
        if w >= w_max:
            w = w_max
            
        if w <= w_min:
            w = w_min
